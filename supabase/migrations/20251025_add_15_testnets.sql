-- 20251025_add_15_testnets.sql
-- 15 yeni testnet projesi ekleme migration'ı

BEGIN;

-- 1. Arbitrum Nova Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'arbitrum-nova-testnet',
  'Arbitrum Nova Testnet',
  'Arbitrum',
  'LIVE',
  'EASY',
  'Arbitrum Nova test ağında dApp geliştirme ve test etme.',
  'Arbitrum Nova, Arbitrum''un AnyTrust teknolojisini kullanan yeni bir L2 çözümüdür. Düşük maliyetli ve hızlı işlemler sunar.',
  '/logos/arbitrum.svg',
  60,
  'ARB',
  'Test tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer2','evm','arbitrum','anytrust'],
  ARRAY['DeFi','Gaming','NFT'],
  ARRAY['Düşük maliyet','Hızlı finalite','EVM uyumlu'],
  ARRAY['Metamask cüzdan','Temel Solidity bilgisi'],
  '["Arbitrum Nova ağını cüzdana ekle","Test tokenları al","Basit bir dApp deploy et"]'::jsonb,
  'https://nova.arbitrum.io',
  'https://github.com/OffchainLabs',
  'https://x.com/arbitrum',
  'https://discord.gg/arbitrum',
  'https://nova.arbitrum.io/dashboard',
  true,
  3200000,
  '[{"role":"Nova Builder","requirement":"En az 3 işlem yap","perks":"Özel Discord kanalı erişimi"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 2. Polygon zkEVM Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'polygon-zkevm-testnet',
  'Polygon zkEVM Testnet',
  'Polygon',
  'LIVE',
  'MEDIUM',
  'Zero-knowledge EVM uyumlu test ağında geliştirme.',
  'Polygon zkEVM, Ethereum''a tam uyumlu zero-knowledge proof tabanlı L2 çözümüdür.',
  '/logos/polygon.svg',
  120,
  'MATIC',
  'Test MATIC ve geliştirici NFT''leri.',
  false,
  true,
  ARRAY['layer2','zk','evm','polygon'],
  ARRAY['DeFi','Infrastructure','Privacy'],
  ARRAY['ZK proof teknolojisi','EVM uyumlu','Düşük maliyet'],
  ARRAY['Solidity deneyimi','ZK proof temel bilgisi'],
  '["zkEVM ağını yapılandır","Test tokenları al","ZK dApp geliştir"]'::jsonb,
  'https://zkevm.polygon.technology',
  'https://github.com/0xPolygonHermez',
  'https://x.com/0xPolygon',
  'https://discord.gg/polygon',
  'https://bridge.zkevm.polygon.technology',
  true,
  4500000,
  '[{"role":"zkEVM Pioneer","requirement":"ZK dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 3. Optimism Goerli Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'optimism-goerli-testnet',
  'Optimism Goerli Testnet',
  'Optimism',
  'LIVE',
  'EASY',
  'Optimism L2 test ağında hızlı ve ucuz işlemler.',
  'Optimism, Ethereum''un optimistic rollup çözümüdür. Hızlı ve düşük maliyetli işlemler sunar.',
  '/logos/optimism.svg',
  45,
  'OP',
  'Test OP tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer2','optimistic-rollup','ethereum'],
  ARRAY['DeFi','Infrastructure','Gaming'],
  ARRAY['Hızlı işlemler','Düşük maliyet','EVM uyumlu'],
  ARRAY['Metamask cüzdan','Temel blockchain bilgisi'],
  '["Optimism ağını ekle","Test tokenları al","İşlem yap"]'::jsonb,
  'https://optimism.io',
  'https://github.com/ethereum-optimism',
  'https://x.com/optimism',
  'https://discord.gg/optimism',
  'https://app.optimism.io',
  true,
  2800000,
  '[{"role":"Optimism Builder","requirement":"5 işlem yap","perks":"Özel Discord erişimi"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 4. Starknet Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'starknet-testnet',
  'Starknet Testnet',
  'Starknet',
  'LIVE',
  'HARD',
  'Starknet''te Cairo ile dApp geliştirme.',
  'Starknet, zk-STARK teknolojisi kullanan L2 çözümüdür. Cairo programlama dili ile geliştirme yapılır.',
  '/logos/starknet.svg',
  180,
  'STRK',
  'Test STRK tokenları ve geliştirici NFT''leri.',
  false,
  true,
  ARRAY['layer2','zk-stark','cairo','scaling'],
  ARRAY['DeFi','Infrastructure','Privacy'],
  ARRAY['ZK-STARK teknolojisi','Cairo dili','Yüksek throughput'],
  ARRAY['Cairo programlama','ZK proof temel bilgisi'],
  '["Cairo kurulumu yap","Test tokenları al","Cairo dApp geliştir"]'::jsonb,
  'https://starknet.io',
  'https://github.com/starkware-libs',
  'https://x.com/starknet',
  'https://discord.gg/starknet',
  'https://starknet.io/ecosystem',
  true,
  5200000,
  '[{"role":"Starknet Developer","requirement":"Cairo dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 5. Avalanche Fuji Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'avalanche-fuji-testnet',
  'Avalanche Fuji Testnet',
  'Avalanche',
  'LIVE',
  'MEDIUM',
  'Avalanche Fuji test ağında hızlı ve ölçeklenebilir dApp geliştirme.',
  'Avalanche, yüksek throughput ve düşük latency sunan L1 blockchain platformudur.',
  '/logos/avalanche.svg',
  90,
  'AVAX',
  'Test AVAX tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','avalanche','evm','scaling'],
  ARRAY['DeFi','Infrastructure','Gaming'],
  ARRAY['Yüksek throughput','Düşük latency','EVM uyumlu'],
  ARRAY['Solidity deneyimi','Avalanche temel bilgisi'],
  '["Avalanche ağını yapılandır","Test tokenları al","dApp geliştir"]'::jsonb,
  'https://avax.network',
  'https://github.com/ava-labs',
  'https://x.com/avalancheavax',
  'https://discord.gg/avalanche',
  'https://app.avax.network',
  true,
  3800000,
  '[{"role":"Avalanche Builder","requirement":"dApp deploy et","perks":"Özel Discord kanalı"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 6. BSC Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'bsc-testnet',
  'BSC Testnet',
  'BSC',
  'LIVE',
  'EASY',
  'Binance Smart Chain test ağında dApp geliştirme.',
  'BSC, Binance''in EVM uyumlu blockchain platformudur. Düşük maliyetli işlemler sunar.',
  '/logos/bsc.svg',
  30,
  'BNB',
  'Test BNB tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','bsc','evm','binance'],
  ARRAY['DeFi','Infrastructure','Trading'],
  ARRAY['Düşük maliyet','Hızlı işlemler','EVM uyumlu'],
  ARRAY['Metamask cüzdan','Temel blockchain bilgisi'],
  '["BSC ağını ekle","Test tokenları al","İşlem yap"]'::jsonb,
  'https://bscscan.com',
  'https://github.com/bnb-chain',
  'https://x.com/bnbchain',
  'https://discord.gg/bnbchain',
  'https://testnet.bscscan.com',
  true,
  1500000,
  '[{"role":"BSC Developer","requirement":"3 işlem yap","perks":"Özel Discord erişimi"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 7. Fantom Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'fantom-testnet',
  'Fantom Testnet',
  'Fantom',
  'LIVE',
  'MEDIUM',
  'Fantom Opera test ağında hızlı ve düşük maliyetli dApp geliştirme.',
  'Fantom, yüksek performanslı ve EVM uyumlu blockchain platformudur.',
  '/logos/fantom.svg',
  75,
  'FTM',
  'Test FTM tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','fantom','evm','dpos'],
  ARRAY['DeFi','Infrastructure','Gaming'],
  ARRAY['Yüksek performans','Düşük maliyet','EVM uyumlu'],
  ARRAY['Solidity deneyimi','Fantom temel bilgisi'],
  '["Fantom ağını yapılandır","Test tokenları al","dApp geliştir"]'::jsonb,
  'https://fantom.foundation',
  'https://github.com/Fantom-Foundation',
  'https://x.com/fantomfdn',
  'https://discord.gg/fantom',
  'https://testnet.ftmscan.com',
  true,
  2200000,
  '[{"role":"Fantom Builder","requirement":"dApp deploy et","perks":"Özel Discord kanalı"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 8. Solana Devnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'solana-devnet',
  'Solana Devnet',
  'Solana',
  'LIVE',
  'HARD',
  'Solana devnet''te Rust ile dApp geliştirme.',
  'Solana, yüksek performanslı ve düşük maliyetli blockchain platformudur. Rust programlama dili kullanır.',
  '/logos/solana.svg',
  240,
  'SOL',
  'Test SOL tokenları ve geliştirici NFT''leri.',
  false,
  true,
  ARRAY['layer1','solana','rust','high-performance'],
  ARRAY['DeFi','Infrastructure','Gaming','NFT'],
  ARRAY['Yüksek performans','Düşük maliyet','Rust dili'],
  ARRAY['Rust programlama','Solana temel bilgisi'],
  '["Solana CLI kur","Test tokenları al","Rust dApp geliştir"]'::jsonb,
  'https://solana.com',
  'https://github.com/solana-labs',
  'https://x.com/solana',
  'https://discord.gg/solana',
  'https://explorer.solana.com',
  true,
  6800000,
  '[{"role":"Solana Developer","requirement":"Rust dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 9. NEAR Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'near-testnet',
  'NEAR Testnet',
  'NEAR',
  'LIVE',
  'MEDIUM',
  'NEAR testnet''te Rust ile dApp geliştirme.',
  'NEAR, geliştirici dostu ve ölçeklenebilir blockchain platformudur.',
  '/logos/near.svg',
  120,
  'NEAR',
  'Test NEAR tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','near','rust','sharding'],
  ARRAY['DeFi','Infrastructure','Gaming','NFT'],
  ARRAY['Geliştirici dostu','Ölçeklenebilir','Rust dili'],
  ARRAY['Rust programlama','NEAR temel bilgisi'],
  '["NEAR CLI kur","Test tokenları al","Rust dApp geliştir"]'::jsonb,
  'https://near.org',
  'https://github.com/near',
  'https://x.com/nearprotocol',
  'https://discord.gg/near',
  'https://explorer.testnet.near.org',
  true,
  3500000,
  '[{"role":"NEAR Builder","requirement":"dApp deploy et","perks":"Özel Discord kanalı"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 10. Cosmos Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'cosmos-testnet',
  'Cosmos Testnet',
  'Cosmos',
  'LIVE',
  'HARD',
  'Cosmos testnet''te Go ile dApp geliştirme.',
  'Cosmos, modüler ve bağlantılı blockchain ekosistemidir.',
  '/logos/cosmos.svg',
  300,
  'ATOM',
  'Test ATOM tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','cosmos','go','ibc','modular'],
  ARRAY['Infrastructure','DeFi','Interoperability'],
  ARRAY['Modüler yapı','IBC protokolü','Go dili'],
  ARRAY['Go programlama','Cosmos temel bilgisi'],
  '["Cosmos CLI kur","Test tokenları al","Go dApp geliştir"]'::jsonb,
  'https://cosmos.network',
  'https://github.com/cosmos',
  'https://x.com/cosmos',
  'https://discord.gg/cosmos',
  'https://explorer.cosmos.network',
  true,
  4200000,
  '[{"role":"Cosmos Developer","requirement":"Go dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 11. Polkadot Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'polkadot-testnet',
  'Polkadot Testnet',
  'Polkadot',
  'LIVE',
  'HARD',
  'Polkadot testnet''te Rust ile parachain geliştirme.',
  'Polkadot, çoklu blockchain ağını birbirine bağlayan platformdur.',
  '/logos/polkadot.svg',
  360,
  'DOT',
  'Test DOT tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer0','polkadot','rust','parachain','substrate'],
  ARRAY['Infrastructure','DeFi','Interoperability'],
  ARRAY['Parachain teknolojisi','Substrate framework','Rust dili'],
  ARRAY['Rust programlama','Substrate temel bilgisi'],
  '["Substrate CLI kur","Test tokenları al","Parachain geliştir"]'::jsonb,
  'https://polkadot.network',
  'https://github.com/paritytech',
  'https://x.com/polkadot',
  'https://discord.gg/polkadot',
  'https://polkadot.js.org/apps',
  true,
  5800000,
  '[{"role":"Polkadot Developer","requirement":"Parachain deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 12. Cardano Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'cardano-testnet',
  'Cardano Testnet',
  'Cardano',
  'LIVE',
  'HARD',
  'Cardano testnet''te Plutus ile dApp geliştirme.',
  'Cardano, bilimsel yaklaşımla geliştirilen blockchain platformudur.',
  '/logos/cardano.svg',
  420,
  'ADA',
  'Test ADA tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','cardano','haskell','plutus','proof-of-stake'],
  ARRAY['DeFi','Infrastructure','Gaming','NFT'],
  ARRAY['Bilimsel yaklaşım','Plutus dili','Haskell'],
  ARRAY['Haskell programlama','Plutus temel bilgisi'],
  '["Cardano CLI kur","Test tokenları al","Plutus dApp geliştir"]'::jsonb,
  'https://cardano.org',
  'https://github.com/input-output-hk',
  'https://x.com/cardano',
  'https://discord.gg/cardano',
  'https://explorer.cardano.org',
  true,
  7200000,
  '[{"role":"Cardano Developer","requirement":"Plutus dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 13. Algorand Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'algorand-testnet',
  'Algorand Testnet',
  'Algorand',
  'LIVE',
  'MEDIUM',
  'Algorand testnet''te Python ile dApp geliştirme.',
  'Algorand, hızlı ve güvenli blockchain platformudur.',
  '/logos/algorand.svg',
  150,
  'ALGO',
  'Test ALGO tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','algorand','python','proof-of-stake'],
  ARRAY['DeFi','Infrastructure','Gaming','NFT'],
  ARRAY['Hızlı işlemler','Güvenli','Python dili'],
  ARRAY['Python programlama','Algorand temel bilgisi'],
  '["Algorand CLI kur","Test tokenları al","Python dApp geliştir"]'::jsonb,
  'https://algorand.com',
  'https://github.com/algorand',
  'https://x.com/algorand',
  'https://discord.gg/algorand',
  'https://testnet.algoexplorer.io',
  true,
  3100000,
  '[{"role":"Algorand Developer","requirement":"Python dApp deploy et","perks":"Özel Discord kanalı"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 14. Tezos Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'tezos-testnet',
  'Tezos Testnet',
  'Tezos',
  'LIVE',
  'HARD',
  'Tezos testnet''te Michelson ile dApp geliştirme.',
  'Tezos, kendi kendini güncelleyebilen blockchain platformudur.',
  '/logos/tezos.svg',
  270,
  'XTZ',
  'Test XTZ tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','tezos','michelson','proof-of-stake'],
  ARRAY['DeFi','Infrastructure','Gaming','NFT'],
  ARRAY['Kendi kendini güncelleme','Michelson dili','Formal verification'],
  ARRAY['Michelson programlama','Tezos temel bilgisi'],
  '["Tezos CLI kur","Test tokenları al","Michelson dApp geliştir"]'::jsonb,
  'https://tezos.com',
  'https://github.com/tezos',
  'https://x.com/tezos',
  'https://discord.gg/tezos',
  'https://testnet.tzstats.com',
  true,
  4800000,
  '[{"role":"Tezos Developer","requirement":"Michelson dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

-- 15. Filecoin Testnet
INSERT INTO public.dewrk_testnets (
  slug, name, network, status, difficulty, short_description, description,
  logo_url, est_time_minutes, reward_type, reward_note,
  kyc_required, requires_wallet, tags, categories, highlights, prerequisites, getting_started,
  website_url, github_url, twitter_url, discord_url, dashboard_url, has_dashboard,
  total_raised_usd, discord_roles
) VALUES (
  'filecoin-testnet',
  'Filecoin Testnet',
  'Filecoin',
  'LIVE',
  'HARD',
  'Filecoin testnet''te depolama ve veri yönetimi.',
  'Filecoin, merkezi olmayan depolama ağıdır.',
  '/logos/filecoin.svg',
  480,
  'FIL',
  'Test FIL tokenları ve geliştirici rozetleri.',
  false,
  true,
  ARRAY['layer1','filecoin','storage','ipfs','proof-of-storage'],
  ARRAY['Infrastructure','Storage','Data'],
  ARRAY['Merkezi olmayan depolama','IPFS entegrasyonu','Proof of Storage'],
  ARRAY['IPFS deneyimi','Filecoin temel bilgisi'],
  '["Filecoin CLI kur","Test tokenları al","Depolama dApp geliştir"]'::jsonb,
  'https://filecoin.io',
  'https://github.com/filecoin-project',
  'https://x.com/filecoin',
  'https://discord.gg/filecoin',
  'https://filscan.io',
  true,
  6200000,
  '[{"role":"Filecoin Developer","requirement":"Depolama dApp deploy et","perks":"Özel hackathon davetleri"}]'::jsonb
)
ON CONFLICT (slug) DO UPDATE SET
  name = EXCLUDED.name,
  network = EXCLUDED.network,
  status = EXCLUDED.status,
  difficulty = EXCLUDED.difficulty,
  short_description = EXCLUDED.short_description,
  logo_url = EXCLUDED.logo_url,
  est_time_minutes = EXCLUDED.est_time_minutes,
  reward_type = EXCLUDED.reward_type,
  reward_note = EXCLUDED.reward_note,
  kyc_required = EXCLUDED.kyc_required,
  requires_wallet = EXCLUDED.requires_wallet,
  tags = EXCLUDED.tags,
  categories = EXCLUDED.categories,
  highlights = EXCLUDED.highlights,
  prerequisites = EXCLUDED.prerequisites,
  getting_started = EXCLUDED.getting_started,
  website_url = EXCLUDED.website_url,
  github_url = EXCLUDED.github_url,
  twitter_url = EXCLUDED.twitter_url,
  discord_url = EXCLUDED.discord_url,
  dashboard_url = EXCLUDED.dashboard_url,
  has_dashboard = EXCLUDED.has_dashboard,
  total_raised_usd = EXCLUDED.total_raised_usd,
  discord_roles = EXCLUDED.discord_roles;

COMMIT;